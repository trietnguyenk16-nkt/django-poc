pipeline {
    agent any
    stages {
        stage("Source Code Management")  {
          steps {
              git branch: 'main', url: 'https://github.com/trietnguyenk16-nkt/django-poc.git' 
          }
        }
        stage("Installed libraries") {
            steps { 
		    sh "sqlite3 --version"
		    sh "python3.8 -m venv jenkinsenv"
		    script {
			    if (fileExists('requirements.txt')) {
	    			sh """
	    				source jenkinsenv/bin/activate
	    				pip3.8 install -r requirements.txt
	    				source jenkinsenv/bin/activate
	 				pip3.8 list
	    				python3.8 manage.py makemigrations
	       				python3.8 manage.py migrate
		   			
	    			"""
			    } else {
				    echo "requirements.txt is not exist"
			    }
		    }
            }
        }
	stage("Run unit test") {
	   steps {
		sh """
    			source jenkinsenv/bin/activate
    			python3.8 manage.py test tests
    		"""
	   }
	}
	stage("Build Django App") {
	   steps {
		sh """
  			source jenkinsenv/bin/activate
     			cp -R portal /var/lib/jenkins/workspace/django-poc
			cd /var/lib/jenkins/workspace/django-poc
   			python3.8 setup.py sdist
      			cd dist
	 		cp django-poc-0.1.tar.gz /home/django-test
    			y 
       			python3.8 -m pip install --user /home/django-test/django-poc-0.1.tar.gz
    		"""
	   }
	}
    }
}
// Note:
// Auto trigger when new commit not implemented
// Add steps to check pass fail (fail send noti, pass continue)
// in stage building django app, Consider to move django-poc out of workspace/GithubPipeline because we can deleteDir after finish or consider to creatte new django-poc with neccessary files each time running the pipeline
// in stage building django app, should investigate how to dynmaic variable of the version (django-poc-xxxx.tar.gz)
// currently home/django-test is only test folder for unpackaging django app, after testing will delete and use /home/my-django-app/django-poc
// find the way not to use venv
// can create shell file to contains all shell command, this jenkinsfile will import that shell file.
// check if can use y (overwrite copy) in build django app, if not we need to create new version of packaging each team we package
